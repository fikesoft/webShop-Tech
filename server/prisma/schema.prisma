// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  guest
  user
  admin
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  role         UserRole @default(user)
  provider     String   @default("credentials") // or 'google'
  name         String?
  picture      String?
  phone        String?
  dateBirth    String?
  refreshToken String   @default(uuid())
  createdAt    DateTime @default(now())
}

/**
 * ————————————
 * Representation of a “Category” (e.g. “Smartphones & Gadgets”).
 * Each category:
 * • has an ID
 * • a user-friendly NAME
 * • a URL-safe SLUG
 * • an ICON reference (file name or URL)
 * • (optionally) a parent-child relationship for nesting
 */
model Category {
  id            Int        @id @default(autoincrement())
  name          String
  slug          String     @unique
  iconFile      String? // we will store "Icon-Home.svg" here
  parentId      Int?
  parent        Category?  @relation("CategoryToSubcategory", fields: [parentId], references: [id])
  subcategories Category[] @relation("CategoryToSubcategory")
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("categories")
}
