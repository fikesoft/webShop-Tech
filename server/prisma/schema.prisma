// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  guest
  user
  admin
}

enum Availability {
  IN_STOCK
  ON_ORDER
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  role         UserRole @default(user)
  provider     String   @default("credentials")
  name         String?
  picture      String?
  phone        String?
  dateBirth    String?
  refreshToken String   @default(uuid())
  createdAt    DateTime @default(now())
}

model Category {
  id            Int        @id @default(autoincrement())
  name          String
  slug          String     @unique
  iconFile      String?
  parentId      Int?
  parent        Category?  @relation("CategoryToSubcategory", fields: [parentId], references: [id])
  subcategories Category[] @relation("CategoryToSubcategory")
  products      Product[] // ← relación con Product
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("categories")
}

model Product {
  id              Int                     @id @default(autoincrement())
  name            String
  slug            String                  @unique
  code            String                  @unique
  description     String?
  price           Decimal                 @db.Decimal(10, 2)
  discount        Decimal?                @db.Decimal(10, 2) // p. ej. 3000
  availability    Availability            @default(IN_STOCK)
  rating          Float                   @default(0)
  reviewCount     Int                     @default(0)
  isNew           Boolean                 @default(false)
  isTop           Boolean                 @default(false)
  category        Category                @relation(fields: [categoryId], references: [id])
  categoryId      Int
  gallery         ProductImage[]
  variants        ProductVariant[] // combinaciones color/memoria/SIM
  characteristics ProductCharacteristic[]
  createdAt       DateTime                @default(now())
  updatedAt       DateTime                @updatedAt

  @@map("products")
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  position  Int // orden en el slider
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@map("product_images")
}

model ProductVariant {
  id        Int     @id @default(autoincrement())
  color     String
  memory    String // p. ej. "128 GB"
  sim       String // "Single SIM" | "Dual SIM"
  stock     Int     @default(0)
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@map("product_variants")
}

model Characteristic {
  id       Int                     @id @default(autoincrement())
  name     String // p. ej. "Rezoluție ecran"
  group    String? // p. ej. "Display", "Generale"
  slug     String                  @unique
  products ProductCharacteristic[]

  @@map("characteristics")
}

model ProductCharacteristic {
  id             Int            @id @default(autoincrement())
  product        Product        @relation(fields: [productId], references: [id])
  productId      Int
  characteristic Characteristic @relation(fields: [charId], references: [id])
  charId         Int
  value          String // p. ej. "146.7 x 71.5 x 7.4 mm"

  @@unique([productId, charId])
  @@map("product_characteristics")
}
